name: ML CI/CD Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.8'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pytest
    
    - name: Run model tests
      run: |
        # Run all tests using pytest with verbose output
        pytest test.py -v
        
        # Additional checks
        python -c "
        import torch
        from model import MNISTModel
        
        # Check parameter count
        model = MNISTModel()
        total_params = sum(p.numel() for p in model.parameters())
        assert total_params < 25000, f'Model has {total_params} parameters, exceeding 25000 limit'
        
        # Check model architecture
        test_input = torch.randn(1, 1, 28, 28)
        output = model(test_input)
        assert output.shape == (1, 10), 'Output shape mismatch'
        
        # Check output range
        assert torch.all(output <= 0), 'Outputs should be log probabilities'
        assert torch.all(torch.isclose(torch.exp(output).sum(dim=1), torch.ones(1))), 'Probabilities should sum to 1'
        "
    
    - name: Train and validate model
      run: |
        python train.py
        # Check training accuracy using a more reliable method
        python -c "import re; f = open('train.log', 'r'); log = f.read(); f.close(); match = re.search(r'Final Training Accuracy: ([\d.]+)%', log); assert match, 'Could not find accuracy in log file'; accuracy = float(match.group(1)); assert accuracy > 94, f'Training accuracy {accuracy}% is below required 95%'"
    
    - name: Upload model
      uses: actions/upload-artifact@v4
      with:
        name: trained-model
        path: mnist_model_*.pth